{"version":3,"sources":["datePresentation/DateTemplates.js","datePresentation/SelectionCard.js","datePresentation/CurrentDate.js","redux/actions/dateActions.js","url.js","datePresentation/LoaderWheel.js","dateContainer/SelectionType.js","dateContainer/Custom.js","dateContainer/Random.js","dateContainer/Login.js","redux/actions/authActions.js","datePresentation/Home.js","dateContainer/Signup.js","datePresentation/EditDateModal.js","dateContainer/PastDate.js","dateContainer/Account.js","dateContainer/Navbar.js","datePresentation/RandomDate.js","App.js","reportWebVitals.js","redux/index.js","redux/reducers/authReducer.js","index.js"],"names":["DateTemplates","props","useState","radioValue","setRadioValue","Container","fluid","Row","Col","ButtonGroup","toggle","name","value","type","map","radio","idx","ToggleButton","variant","checked","onChange","e","currentTarget","handleClick","Form","onSubmit","handleSubmit","Group","Label","Control","className","zipcode","handleChange","placeholder","Button","size","SelectionCard","state","open","renderCategories","activity","categories","c","title","showMore","status","setState","renderCard","Card","style","width","margin","minWidth","this","foodOnly","Img","src","image_url","height","objectFit","onClick","Body","Title","Collapse","in","price","location","display_address","display_phone","random","addActivityToDate","href","url","target","rel","React","Component","CurrentDate","handleFoodDate","event","saveFoodDate","food","user","history","handleFoodActivityDate","Array","isArray","alert","saveFoodActivityDate","renderCurrentDate","Header","Footer","loggedIn","withRouter","connect","authReducer","currentUser","dispatch","fetch","method","headers","credentials","body","JSON","stringify","then","resp","json","push","id","LoaderWheel","color","timeout","SelectionType","search","activityResults","dateActivity","loading","renderActivitySelection","length","randomActivity","Math","floor","activityCards","result","slides","slice","Carousel","fade","slide","Item","businesses","Custom","dateType","renderFood","renderActivity","dateFood","showZipAlert","showDateTypeAlert","preventDefault","renderTemplate","renderChoices","addFoodToDate","window","scroll","top","left","behavior","Alert","Jumbotron","Random","renderDate","showAlert","renderRandomDate","Login","username","password","login","error","maxWidth","fetching","errorMessage","message","payload","logged_in","Home","marginBottom","Signup","password_confirmation","signup","EditDateModal","Modal","show","onHide","backdrop","keyboard","closeButton","as","rows","notes","date","handleClose","save","PastDate","handleShow","renderPrettyDate","Date","toDateString","renderPastDate","backgroundColor","padding","activities","textAlign","deleteDate","editDate","lg","xs","md","reload","outing","Account","dates","showDates","showPastDate","renderActivities","attributes","renderDates","outings","included","forEach","data","sort","a","b","Navbarr","Navbar","collapseOnSelect","bg","expand","Brand","to","Toggle","aria-controls","Nav","logout","RandomFood","reloader","match","params","App","toggleLoading","checkLoggedIn","exact","path","component","render","routerProps","RandomDate","callback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.365794cb.chunk.js","sourcesContent":["import {React,useState} from 'react'\nimport {Button,ToggleButton, ButtonGroup,Form, Container, Row, Col} from 'react-bootstrap'\nimport '../App.css';\n\nfunction DateTemplates(props){\n    const [radioValue, setRadioValue] = useState('0');\n\n    const radios = [\n        { name: 'Food', value: '1', type: 'food' },\n        { name: 'Food and Activity', value: '2', type: 'food-activity' },\n      ];\n\n    return <Container fluid=\"md\">\n        <Row>\n          <Col>\n            <h1>What type of date?</h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <h4>Select a date type and enter a zipcode </h4>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <ButtonGroup toggle>\n              {radios.map((radio, idx) => (\n                <ToggleButton\n                  key={idx}\n                  type=\"radio\"\n                  variant=\"secondary\"\n                  name={radio.type}\n                  value={radio.value}\n                  checked={radioValue === radio.value}\n                  onChange={(e) => {\n                      setRadioValue(e.currentTarget.value)\n                      props.handleClick(e)\n                  }\n              }\n                >\n                  {radio.name}\n                </ToggleButton>\n              ))}\n            </ButtonGroup>\n          </Col>\n        </Row>\n      <br></br>\n      <br></br>\n      <Row >\n        <Col >\n          <Form onSubmit={props.handleSubmit} >\n            <Form.Group>\n            <Form.Row>\n\n            <Col >\n            <Form.Label>Zipcode: </Form.Label>\n            <Form.Control\n              type=\"number\"\n              className='zipcode-field'\n              value={props.zipcode}\n              onChange={props.handleChange}\n              placeholder='5 digit zipcode'\n    \n            />\n            \n          <Button type='submit' size='lg' >Search!</Button>\n          </Col>\n          </Form.Row>\n          </Form.Group>\n          </Form>\n        </Col>\n      </Row>\n      </Container>\n\n}\n\nexport default DateTemplates","import React from 'react'\nimport {Card,Button, Collapse} from 'react-bootstrap'\n\n\nclass SelectionCard extends React.Component{\n\n    state={\n        open: false\n    }\n\n    renderCategories=()=>{\n        return this.props.activity.categories.map(c=>{\n            return <li key={c.title}>{c.title}</li>\n        })\n    }\n\n    showMore= () =>{\n        let status = this.state.open\n        this.setState({\n            open: !status\n        })\n    }\n\n    renderCard = () =>{\n    }\n\n    render(){\n    \n        return (\n            <Card style={{ width: '100%',margin: 'auto', minWidth: '316px'}} className={`shadow-sm p-3 mb-5 bg-body rounded ${this.props.foodOnly}`} >\n                <Card.Img variant='top' src={this.props.activity.image_url} style={{width: '95%', height: '300px', margin: 'auto', objectFit: 'contain'}}  onClick={this.showMore}/>\n                <Card.Body>\n                    <Card.Title><h5>{this.props.activity.name}</h5></Card.Title>\n                    <Collapse in={this.state.open}>\n                        <div>\n                            \n                        {!!this.props.activity.price?<h6>{this.props.activity.price}</h6>:''}\n                        {!!this.props.activity.location.display_address[0]? <>{this.props.activity.location.display_address[0]}<br></br>{this.props.activity.location.display_address[1]}</>: ''}\n                        <br></br>\n                        {!!this.props.activity.display_phone ? <>{this.props.activity.display_phone}</>:''}\n                        <br></br>\n                        <br></br>\n                        <h6><u>Categories</u></h6>\n\n                        <ul>\n                            {this.renderCategories()}\n                        </ul>\n                        </div>\n                        </Collapse>\n                    {this.props.random ==='false' ? <Button variant='primary' value={this.props.activity} onClick={()=>this.props.addActivityToDate(this.props.activity)}>Add To Date</Button>: ''}\n                    <a href={this.props.activity.url} target='_blank' rel=\"noreferrer\"><Button variant='secondary' >Check out on Yelp!</Button></a>\n                    {this.state.open ? <Button onClick={this.showMore} variant='secondary'>Show Less</Button> : <Button onClick={this.showMore} variant='secondary'>Show More</Button>}\n                </Card.Body>\n            </Card>\n        )\n    }\n}\n\nexport default SelectionCard\n","import React from 'react'\nimport {Card, Container, Row, Button} from 'react-bootstrap'\nimport {connect} from 'react-redux'\nimport {saveFoodDate} from '../redux/actions/dateActions'\nimport {saveFoodActivityDate} from '../redux/actions/dateActions'\nimport {withRouter} from 'react-router-dom'\nimport SelectionCard from './SelectionCard'\n\nclass CurrentDate extends React.Component{\n\n    handleFoodDate=(event)=>{\n        this.props.saveFoodDate(this.props.food, this.props.user, this.props.history)\n    }\n\n    handleFoodActivityDate=(event)=>{\n        if(!Array.isArray(this.props.food) && !Array.isArray(this.props.activity)){\n            this.props.saveFoodActivityDate(this.props.food, this.props.activity, this.props.user, this.props.history)\n        }else{\n            alert(\"Make sure to add both a food and activity to date before saving.\")\n        }\n    }\n\n\n    renderCurrentDate=()=>{\n        switch(this.props.type){\n            case('food'):\n            if(!Array.isArray(this.props.food)){\n                return <Container>\n                    <Card >\n                        <Card.Header>\n                            <h4>Current Date</h4>\n                        </Card.Header>\n                        <SelectionCard activity={this.props.food} addActivityToDate={''} random='true' />\n                        <Card.Footer>\n                            {this.props.loggedIn?<Button onClick={()=>this.handleFoodDate()}>Save date to profile</Button>:\"Login or Signup to save\"}\n                        </Card.Footer>\n                    </Card>\n                <br></br>\n                <br></br>\n                </Container>\n            } else {\n                return <Container><h2>Select a place to eat from below</h2></Container>\n            }\n            case('food-activity'):\n            if(Array.isArray(this.props.food)&&(Array.isArray(this.props.activity))){\n                return <h4><u>Select a place to eat and something to do from below</u></h4>\n            }else{\n                return <Container>\n                    <Card >\n                        <Card.Header>\n                            <h4>Current Date</h4>\n                        </Card.Header>\n                        <Container>\n                            <Row>\n                        {!Array.isArray(this.props.food)? <SelectionCard activity={this.props.food} addActivityToDate='' random = 'true'/>: ''}\n                        {!Array.isArray(this.props.activity)? <SelectionCard activity={this.props.activity} addActivityToDate={''} random='true'/> : ''}\n                        </Row>\n                        </Container>\n                        <Card.Footer>\n                            {this.props.loggedIn?<Button variant = 'success' onClick={()=>this.handleFoodActivityDate()}>Save date to profile</Button>:\"Login or Signup to save\"}\n                        </Card.Footer>\n                    </Card>\n                <br></br>\n                <br></br>\n                </Container>\n            }\n            default:\n                return <div>\n                    <h4><u>Select a place to eat from below</u></h4>\n                </div>\n        }\n    }\n\n    render(){\n        return <div>    \n            {this.renderCurrentDate()}</div>\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return{\n        saveFoodDate: (food,user,history)=>{dispatch(saveFoodDate(food,user, history))},\n        saveFoodActivityDate: (food,activity,user,history)=>{dispatch(saveFoodActivityDate(food,activity,user,history))}\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        user: state.authReducer.currentUser,\n        loggedIn: state.authReducer.loggedIn\n    }\n}\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(CurrentDate))","import {fetchUrl} from '../../url'\n\n\nexport const saveFoodDate = (food, user, history)=>{\n    return dispatch=>{\n        dispatch({type: 'STARTING_FETCH'})\n        fetch(`${fetchUrl()}/outings`, {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json'\n            },\n            credentials: 'include',\n            body: JSON.stringify({food: food, user: user, type: 'food'})\n          }).then(resp=>resp.json()).then(json=>{\n                dispatch({\n                type: 'NOTHING'\n            })\n            history.push(`/user/${user.id}`)\n        })\n    }\n}\n\nexport const saveFoodActivityDate = (food, activity, user, history)=>{\n    return dispatch=>{\n        dispatch({type: 'STARTING_FETCH'})\n        fetch(`${fetchUrl()}/outings`, {\n            method: 'POST',\n            headers:{\n              'Content-Type': 'application/json'\n        },\n            credentials: 'include',\n            body: JSON.stringify({food: food, activity: activity, user: user, type: 'foodActivity'})\n        }).then(resp=>resp.json()).then(json=>{\n            dispatch({\n              type: 'NOTHING'\n            })\n            history.push(`/user/${user.id}`)\n        })\n    }\n}\n\n\nexport const deleteDate =(date, history)=>{\n    return dispatch=>{\n        fetch(`${fetchUrl()}/outings/${date.id}`, {\n            method:'DELETE',\n            credentials: 'include'\n        } ).then(resp=>resp.json()).then(json=>{\n            dispatch({\n                type:'NOTHING'\n            })\n            window.location.reload()\n        })\n    }\n}\n\nexport const editDate =(outing, notes, date)=>{\n    return dispatch =>{\n        dispatch({type: 'STARTING_FETCH'})\n        fetch(`${fetchUrl()}/outings/${outing.id}`,{\n            method: 'PATCH',\n            headers:{\n                'Content-Type': 'application/json'\n          },\n            credentials: 'include',\n            body: JSON.stringify({outing:{notes: notes, date:date}})\n        }).then(resp=>resp.json()).then(json=>{\n            dispatch({\n                type: 'NOTHING'\n            })\n            window.location.reload()\n        })\n    }\n}\n","\n   export const fetchUrl =()=>{\n      const dev = \"http://localhost:3000\"\n      const prod = \"https://date-sidekick-api.herokuapp.com\"\n      return process.env.NODE_ENV === 'development' ? dev : prod\n      // return dev\n   }\n","import React from 'react'\nimport Loader from \"react-loader-spinner\";\n\nfunction LoaderWheel () {\n    return <div className='App'>\n        <Loader\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000} //3 secs\n        />\n    </div>\n}\n\nexport default LoaderWheel","import React from 'react'\nimport { Carousel, Container, Row, Col} from 'react-bootstrap'\nimport {fetchUrl} from '../url'\nimport LoaderWheel from '../datePresentation/LoaderWheel'\nimport SelectionCard from '../datePresentation/SelectionCard'\n\nexport default class SelectionType extends React.Component{\n    state={\n        search: '', \n        activityResults: [],\n        dateActivity:{},\n        loading: true\n    }\n\n    renderActivitySelection=()=>{\n        if(this.state.activityResults.length >0){\n            if(this.props.random==='true'){\n                let randomActivity = this.state.activityResults[Math.floor(Math.random() * this.state.activityResults.length)]\n                return <SelectionCard activity={randomActivity} addActivityToDate={this.props.addActivityToDate} random='true'/>\n            }else{\n                let activityCards = this.state.activityResults.map(result=>{\n                    return <SelectionCard activity={result} addActivityToDate={this.props.addActivityToDate} random='false'/>\n                })\n\n            let slides = [activityCards.slice(0,3),activityCards.slice(3,6),activityCards.slice(6,9),activityCards.slice(9,12),activityCards.slice(12,15),activityCards.slice(15,18),activityCards.slice(18,21)]\n            return <Carousel fade >\n                {slides.map(slide=>{\n                    return <Carousel.Item >\n                        <Row>\n                        {slide.map(result=>{\n                            return <Col>\n                            {/* <div className='d-block h-50'> */}\n                                {result}\n                            {/* </div> */}\n                            </Col>\n                        })\n                        }\n                        </Row>\n                    </Carousel.Item>\n            })}\n            </Carousel>\n            }\n        }\n    }\n\n    componentDidMount(){\n        fetch(`${fetchUrl()}/search/${this.props.zipcode}/${this.props.type}`).then(resp=>resp.json()).then(json=>{\n            if(this.props.type==='food-activity'){\n            this.setState({\n                activityResults: json.activity.businesses,\n                loading: false\n            })\n            }else{\n                this.setState({\n                    activityResults: json.businesses,\n                    loading: false\n                })   \n            }           \n        })\n    }\n\n    render(){\n        if(this.state.loading){\n            return <div className='App'>\n    <LoaderWheel/>\n  </div>\n        }\n        return <div className='datecard'>\n            {this.props.type === 'food'?<h1>Food Offering</h1>: <h1>Activity Offering</h1> }\n            <Container>\n                <Row>\n                    <Col>\n                        {this.renderActivitySelection()}    \n                    </Col>\n                </Row> \n            </Container>\n        </div>\n    }\n}","import React from 'react'\nimport DateTemplates from '../datePresentation/DateTemplates'\nimport CurrentDate from '../datePresentation/CurrentDate'\nimport { Container, Jumbotron, Row, Alert } from 'react-bootstrap'\nimport '../App.css';\nimport SelectionType from './SelectionType'\n\n\n\nexport default class Custom extends React.Component{\n    state={\n        dateType: '',\n        zipcode: '',\n        renderFood: false,\n        renderActivity: false,\n        dateFood:[],\n        dateActivity: [],\n        showZipAlert: false,\n        showDateTypeAlert: false\n    }\n\n    handleClick=(event)=>{\n        this.setState({\n            dateType: event.target.name,\n            renderFood: false,\n            renderActivity: false,\n            dateFood:[],\n            dateActivity: []\n        })\n    }\n\n    handleChange=(event)=>{\n\n\n        if(event.target.value.length <= 5){\n            this.setState({\n                renderFood: false,\n                renderActivity: false,\n                zipcode: event.target.value\n            })\n        }\n        // else{\n        //     this.setState({\n        //         zipcode: event.target.value\n        //     })\n        // }\n\n\n\n\n\n\n\n        // if(event.target.value !== 5){\n        //     this.setState({\n        //         renderFood: false,\n        //         renderActivity: false,\n        //         zipcode: event.target.value\n        //     })\n        // } else{\n        //     this.setState({\n        //         zipcode: event.target.value\n        //     })\n        // }\n    }\n\n\n    handleSubmit=(event)=>{\n        event.preventDefault()\n        if(this.state.dateType  && this.state.zipcode.length === 5){\n            switch(this.state.dateType){\n                case 'food':\n                this.setState({\n                    renderFood: true,\n                    renderActivity: false,\n                    showZipAlert: false,\n                    showDateTypeAlert: false\n                })\n                break\n                case 'food-activity':\n                    this.setState({\n                        renderActivity: true,\n                        renderFood: true,\n                        showZipAlert: false,\n                        showDateTypeAlert: false\n                    })\n                break\n                default:\n                    this.setState({\n                        renderFood: false,\n                        renderActivity: false,\n                    })\n            }\n        } else{\n            if(this.state.zipcode.length !== 5){\n                this.setState({\n                    showZipAlert: true,\n                    showDateTypeAlert: false\n                })\n            } else{\n                this.setState({\n                    showDateTypeAlert: true,\n                    showZipAlert: false\n                })\n            }\n        }\n    }\n\n    renderTemplate=()=>{\n        return <DateTemplates handleClick={this.handleClick} handleSubmit={this.handleSubmit} handleChange={this.handleChange} zipcode={this.state.zipcode}/>\n    }\n    \n    renderChoices=()=>{\n        switch(true){\n            case(this.state.renderFood && this.state.renderActivity):\n               return <div>\n                    <Container fluid>\n                        <Row className=\"justify-content-md-center\">\n                            <SelectionType zipcode={this.state.zipcode} type='food' random='false' addActivityToDate={this.addFoodToDate}/>\n                        </Row>\n                    </Container>\n                    <br></br>\n                    <br></br>\n                    <Container fluid>\n                        <Row className=\"justify-content-md-center\">\n                            <SelectionType zipcode={this.state.zipcode} type='food-activity' random='false' addActivityToDate={this.addActivityToDate}/>\n                        </Row>\n                    </Container>\n                </div>\n            case (!this.state.renderActivity && this.state.renderFood):\n                return <div>\n                    <Container>\n                        <Row className=\"justify-content-md-center\">\n                            <SelectionType zipcode={this.state.zipcode} type='food' random='false' addActivityToDate={this.addFoodToDate}/>\n                        </Row>\n                    </Container>\n                </div>\n            default: \n             return <p>Select date type and enter 5 digit zipcode</p>\n        }\n    }\n\n    addFoodToDate=(food)=>{\n        this.setState({\n            dateFood: food\n        })\n        window.scroll({\n            top:300, \n            left: 0,\n            behavior: 'smooth'\n        })\n    }\n\n    addActivityToDate=(activity)=>{\n        this.setState({\n            dateActivity: activity\n        })\n        window.scroll({\n            top:300, \n            left: 0,\n            behavior: 'smooth'\n        })\n    }\n\n    render(){\n        return <div>\n            {this.state.showZipAlert ? <Alert variant='danger'>Make sure to enter a 5 digit zipcode.</Alert>: ''}\n            {this.state.showDateTypeAlert ? <Alert variant='danger'>Make sure to select Food or Food and Activity Button.</Alert>: ''}\n            <Jumbotron fluid>\n                <DateTemplates handleClick={this.handleClick} handleSubmit={this.handleSubmit} handleChange={this.handleChange} zipcode={this.state.zipcode}/>  \n            </Jumbotron>\n            <Container fluid>\n                <Row className=\"justify-content-md-center\">\n                    {this.state.dateType !== '' ? <CurrentDate food={this.state.dateFood} activity={this.state.dateActivity} type={this.state.dateType}/>: '' }\n                </Row>\n            </Container>\n            {this.renderChoices()}    \n            <br></br>\n            <br></br>\n            <br></br>\n        </div>\n\n    }\n}","import React from 'react'\nimport DateTemplates from '../datePresentation/DateTemplates'\nimport { Jumbotron, Container, Alert} from 'react-bootstrap'\nimport {withRouter} from 'react-router-dom'\n\nclass Random extends React.Component{\n    state={\n        dateType: '',\n        zipcode: '',\n        renderDate: false,\n        showAlert: false,\n        showZipAlert: false,\n        showDateTypeAlert: false\n    }\n\n\n//need to redo to enter max of 5 like with custom\n    handleChange=(event)=>{\n        if(event.target.value.length <=5){\n            this.setState({\n                zipcode: event.target.value\n            })\n        }\n\n\n\n\n\n\n        // if(event.target.value !== 5){\n        //     this.setState({\n        //         renderDate: false,\n        //         zipcode: event.target.value\n        //     })\n        // } else{\n        //     this.setState({\n        //         zipcode: event.target.value\n        //     })\n        // }\n    }\n\n    handleClick=(event)=>{\n        this.setState({\n            dateType: event.target.name,\n            renderDate: false\n        })\n    }\n\n    renderRandomDate=()=>{\n        if(this.state.dateType==='food'){\n            this.props.history.push(`/random-food-dates/${this.state.zipcode}`)\n        }else{\n            this.props.history.push(`/random-food-activity-dates/${this.state.zipcode}`)\n        }\n    }\n\n    handleSubmit=(event)=>{\n        event.preventDefault()\n        if((this.state.dateType !== '') && (this.state.zipcode.length === 5)){\n            this.setState({\n                renderDate: true,\n            })\n        }else{\n            if(this.state.dateType === ''){\n                this.setState({\n                    showDateTypeAlert: true,\n                    showZipAlert: false\n                })\n            } else {\n                this.setState({\n                    showZipAlert: true,\n                    showDateTypeAlert: false\n                })\n            }\n\n\n\n\n\n\n            // this.setState({\n            //     renderDate: false,\n            //     showAlert: true\n            // })\n        }\n    }\n\n    render(){\n        return <div>\n            {this.state.showZipAlert ? <Alert variant='danger'>Make sure to enter a 5 digit zipcode.</Alert>: ''}\n            {this.state.showDateTypeAlert ? <Alert variant='danger'>Make sure to select Food or Food and Activity Button.</Alert>: ''}\n            <Jumbotron fluid>\n                <DateTemplates handleClick={this.handleClick} handleSubmit={this.handleSubmit} handleChange={this.handleChange} zipcode={this.state.zipcode}/>  \n            </Jumbotron>\n            <Container >\n                \n                    \n                    \n                        {this.state.renderDate ? this.renderRandomDate():<p>Select date type and enter 5 digit zipcode</p>}\n                    \n                    \n                \n            </Container>\n        </div>\n    }\n}\n\nexport default withRouter(Random)","import React from 'react'\nimport {login} from '../redux/actions/authActions'\nimport {connect} from 'react-redux'\nimport {Form,Card, Button, Container,Row,Alert} from 'react-bootstrap'\nimport LoaderWheel from '../datePresentation/LoaderWheel'\n\nclass Login extends React.Component{\n\n    state={\n        username: '',\n        password: '',\n    }\n\n    handleChange=(event)=>{\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit=(event)=>{\n        event.preventDefault()\n       this.props.login(this.state, this.props.history)\n    }\n\n    render(){\n        if(this.props.loading){\n            return <div className='App'>\n            <LoaderWheel/>\n          </div>\n        }\n        // return <div id='login'>\n        //     {this.props.error !== ''?<Alert variant='danger'>{this.props.error}</Alert>: ''}\n        //     <br></br>\n        //     <br></br>\n        //     <br></br>\n        //     <br></br>\n             return <Container id='login'>\n                 <br></br>\n            {this.props.error !== ''?<Alert variant='danger'>{this.props.error}</Alert>: ''}\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n                <Row className=\"justify-content-md-center\">\n                    <Card style={{width: '75%', margin: 'auto', minWidth: '20em', maxWidth:\"40em\"}} className=\"card border-info mb-3 shadow-lg p-3 mb-5 bg-body rounded\">\n                        <Card.Header>\n                            <h4>Welcome back!</h4>\n                        </Card.Header>\n                        <Form onSubmit={this.handleSubmit}>\n                            <Form.Group>\n                            <Form.Label>Username:</Form.Label>\n                            <Form.Control name='username' type='text' value={this.state.username} placeholder='username' onChange={this.handleChange}/>\n                            <Form.Label>Password:</Form.Label>\n                            <Form.Control name='password' type='password' value={this.state.password} placeholder='password' onChange={this.handleChange}/>\n                            </Form.Group>\n                            <Button type='submit' >Login</Button>\n                        </Form>\n                    </Card>\n                </Row>\n            </Container>\n        // </div>\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        login : (user, history)=>{dispatch(login(user,history))}\n    }\n}\nconst mapStateToProps =(state)=>{\n    return{\n        loading: state.authReducer.fetching,\n        error: state.authReducer.errorMessage,\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import {fetchUrl} from '../../url'\n\nexport const signup=(user, history)=>{\n    return dispatch=>{\n        dispatch({type: 'STARTING_FETCH'})\n        fetch(`${fetchUrl()}/users`,{\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json'\n            },\n            credentials: 'include',\n            body: JSON.stringify({user: user})\n        })\n        .then((resp)=>resp.json())\n        .then((json)=>{\n            if(!!json.message){\n                dispatch({\n                    type: 'AUTH_FAILED',\n                    payload: {errorMessage: json.message}\n                })\n                history.push('/signup')\n            }else{\n            dispatch({\n                type: 'AUTH_SUCCESSFUL',\n                 payload: {loggedIn: json.logged_in, currentUser: json.user}\n            })\n            history.push(`/user/${json.user.id}`)\n        }\n        })\n    }\n}\n\n\nexport const login=(user, history)=>{\n    return dispatch=>{\n        dispatch({type: 'STARTING_FETCH'})\n        fetch(`${fetchUrl()}/sessions`,{\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json'\n            },\n            credentials: 'include',\n            body: JSON.stringify({user: user})\n        })\n        .then((resp)=>resp.json())\n        .then((json)=>{\n            if(!!json.message){\n                dispatch({\n                    type: 'AUTH_FAILED',\n                    payload: {errorMessage: json.message}\n                })\n                history.push('/login')\n            }else{\n            dispatch({\n                type: 'AUTH_SUCCESSFUL',\n                 payload: {loggedIn: json.logged_in, currentUser: json.user}\n            })\n            history.push(`/user/${json.user.id}`)\n        }\n        })\n    }\n}\n\nexport const checkLoggedIn = (callback) =>{\n    return(dispatch)=>{\n        fetch(`${fetchUrl()}/logged_in`,{\n            credentials: 'include'\n            }).then(resp=>resp.json()).then(json=>{\n            dispatch({\n                type: 'AUTH_SUCCESSFUL',\n                payload: {loggedIn: json.logged_in, currentUser: json.user}\n            })\n            callback()\n        })\n    }\n}\n\nexport const logout =(history)=>{\n    return dispatch=>{\n        fetch(`${fetchUrl()}/logout`,{\n            method:'DELETE',\n            credentials: 'include'\n        }).then(resp=>resp.json()).then(json=>{\n            dispatch({\n                type: 'LOGOUT'\n            })\n            history.push('/login')\n        })\n    }\n}\n\n","import React from 'react'\nimport { Container, Button} from 'react-bootstrap'\n\nfunction Home(){\n    return(\n            <Container className='home-container' fluid>\n                <Container className='home-content shadow-lg'>\n                <h1>Welcome to Date Sidekick!</h1>\n                <p>\n                Deciding where to go on a date can be tough. Date Sidekick has two ways it can help. With the help of Yelp you can plan you next date with a list of options from your choosen zipcode. You can create and save this date to your profile. For the adventurous folks we have random mode. This will give you a random place to go based on your zipcode!\n                </p>\n                <Button style={{marginBottom: '1em'}} variant=\"primary\" onClick={()=>window.location.href='/random-date/new'}>Random Date</Button>{' '}\n                <Button style={{marginBottom: '1em'}} variant=\"primary\" onClick={()=>window.location.href='/custom-date/new'}>Create a Custom Date</Button>{' '}\n                </Container>\n            </Container>\n    )\n}\n\nexport default Home","import React from 'react'\nimport {signup} from '../redux/actions/authActions'\nimport {connect} from 'react-redux'\nimport { Button, Form,Container,Row,Card, Alert } from 'react-bootstrap'\nimport LoaderWheel from '../datePresentation/LoaderWheel'\n\nclass Signup extends React.Component{\n\n    state={\n        username: '',\n        password: '',\n        password_confirmation: '',\n    }\n\n    handleChange=(event)=>{\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit=(event)=>{\n        event.preventDefault()\n        this.props.signup(this.state, this.props.history)\n}\n\n    render(){\n        if(this.props.loading){\n            return <div className='App'>\n            <LoaderWheel/>\n          </div>\n        }\n        // return <div>\n        //     {this.props.error !== ''?<Alert variant='danger'>{this.props.error}</Alert>: ''}\n        //     <br></br>\n        //     <br></br>\n        //     <br></br>\n        //     <br></br>\n            return <Container>\n                <br></br>\n            {this.props.error !== ''?<Alert variant='danger'>{this.props.error}</Alert>: ''}\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n\n                <Row className=\"justify-content-md-center\">\n                    <Card style={{width: '75%', margin: 'auto', minWidth: '20em', maxWidth: '40em'}} className=\"card border-info mb-3 shadow-lg p-3 mb-5 bg-body rounded\">\n                        <Card.Header>\n                            <h4>Welcome, Create an Account!</h4>\n                        </Card.Header>\n                        <Form onSubmit={this.handleSubmit}>\n                            <Form.Group>\n                                <Form.Label>Username:</Form.Label>\n                                <Form.Control name='username' type='text' value={this.state.username} placeholder='username' onChange={this.handleChange}/>\n                                <Form.Label>Password:</Form.Label>\n                                <Form.Control name='password' type='password' value={this.state.password} placeholder='password' onChange={this.handleChange}/>\n                                <Form.Label>Password Confirmation:</Form.Label>\n                                <Form.Control name='password_confirmation' type='password' value ={this.state.password_confirmation} placeholder='confirm password' onChange={this.handleChange}/>\n                            </Form.Group>\n                        <Button type='submit'>Create Account</Button>\n                        </Form>\n                    </Card>\n                </Row>\n            </Container>\n        // </div>\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        signup : (user, history)=>{dispatch(signup(user,history))}\n    }\n}\nconst mapStateToProps = (state)=>{\n    return{\n        error: state.authReducer.errorMessage,\n        loading: state.authReducer.fetching\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup)","import React from 'react'\nimport {Modal, Form, Button} from 'react-bootstrap'\n\nfunction EditDateModal(props){\n    return <div>\n        <Modal show={props.show} onHide={props.onHide} backdrop=\"static\" keyboard={false}>\n            <Modal.Header closeButton>\n                <Modal.Title>Add/Edit notes and date</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Label>Notes:</Form.Label>\n                    <Form.Control as=\"textarea\" rows={3} value={props.notes} onChange={props.onChange} name='notes'/>\n                    <Form.Label>Date:</Form.Label>\n                    <Form.Control type='date' value={props.date} onChange={props.onChange} name='date'/>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={props.handleClose}>Close</Button>\n                <Button variant=\"primary\" onClick={props.save}>Save Changes</Button>\n            </Modal.Footer>\n        </Modal>\n    </div>\n}\n\nexport default EditDateModal","import React from 'react'\nimport {Card,Container, Row,Button} from 'react-bootstrap'\nimport {deleteDate, editDate} from '../redux/actions/dateActions'\nimport {withRouter} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport EditDateModal from '../datePresentation/EditDateModal'\nimport '../App'\nimport SelectionCard from '../datePresentation/SelectionCard'\n\n class PastDate extends React.Component{\n\n    state={\n        show: false,\n        notes: this.props.date.notes,\n        date: this.props.date.date,\n        // likes: 0\n    }\n\n    handleClose= ()=>{\n        this.setState({\n            show:false\n        })\n    }\n\n    handleShow=()=>{\n        this.setState({\n            show: true\n        })\n    }\n\n    handleChange=(event)=>{\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    // handleLike=()=>{\n    //     let likes=this.state.likes\n    //     this.setState({\n    //         likes: likes + 1\n    //     })\n    // }\n\n    renderPrettyDate=()=>{\n        let dateObj = new Date(this.props.date.date)\n        return dateObj.toDateString()\n    }\n\n\n\n    renderPastDate=()=>{\n        switch(this.props.type){\n            case('food'):\n                return <div>\n                    <Card style={{backgroundColor: '#FFFACD', padding: '1em', margin: 'auto', width: '350px'}}>\n                        <h2>Food Date</h2>\n                        <Card.Body>\n                            <SelectionCard activity={this.props.date.activities[0]} addActivityToDate={''} random='true' foodOnly={'past-food-date'} />\n                            <h5 style={{textAlign: 'left'}}>When: <strong>{!!this.props.date.date ? this.renderPrettyDate(): ''}</strong></h5>\n                            <hr></hr>\n                            <h5 style={{textAlign: 'left'}}>Notes:<br></br>{!!this.props.date.notes ? this.props.date.notes: '- Tell me about it?!?!?'}</h5>\n                        </Card.Body>\n                        <Card.Footer>\n                            {/* add a like button. On button have an event listner to change liked amount */}\n                            {/* <Button variant='primary' onClick={this.handleLike}>Like me! {this.state.likes}</Button> */}\n                            <Button variant=\"info\" onClick={this.handleShow}>Edit Date</Button>\n                            <Button variant='danger' onClick={()=>this.props.deleteDate(this.props.date, this.props.history)}>Delete Date</Button>\n                        </Card.Footer>\n                    </Card>\n                <br></br>\n                <br></br>\n\n                <EditDateModal show={this.state.show} onHide={this.handleClose} notes={this.state.notes} date={this.state.date} onChange={this.handleChange} save={()=>this.props.editDate(this.props.date, this.state.notes, this.state.date)} handleClose={this.handleClose}/>\n                </div>\n            case('food-activity'):\n                return <div>\n                    <Card className='past-food-activity' style={{backgroundColor: '#FFFACD', padding: '1em' ,margin: 'auto', minWidth: '700px', width: 'fit-content', maxWidth: '700px'}}>\n                        <h2>Food and Activity Date</h2>\n                        <Container>\n                                <Row lg={2} xs={1} md={1}>\n                                <SelectionCard activity={this.props.date.activities[0]} addActivityToDate='' random = 'true'/>\n                                <SelectionCard activity={this.props.date.activities[1]} addActivityToDate={''} random='true'/>\n                               </Row>\n                        </Container>\n                        <h5 style={{textAlign: 'left'}}>When: <strong>{!!this.props.date.date ? this.renderPrettyDate(): ''}</strong></h5>\n                        <hr></hr>\n                        <h5 style={{textAlign: 'left'}}>Notes:<br></br>{!!this.props.date.notes ? this.props.date.notes: '- Tell me about it?!?!?'}</h5>\n                        <Card.Footer>\n                        {/* <Button variant='primary' onClick={this.handleLike}>Like me! {this.state.likes}</Button> */}\n\n                            <Button variant=\"info\" onClick={this.handleShow} style={{margin: '1%'}}>Edit Date</Button>\n                            <Button variant='danger' style={{margin: '1%'}} onClick={()=>this.props.deleteDate(this.props.date, this.props.history)}>Delete Date</Button>\n                        </Card.Footer>\n                    </Card>\n                <br></br>\n                <br></br>\n                <EditDateModal show={this.state.show} onHide={this.handleClose} notes={this.state.notes} date={this.state.date} onChange={this.handleChange} save={()=>this.props.editDate(this.props.date, this.state.notes, this.state.date)} handleClose={this.handleClose}/>\n                </div>\n            default:\n                return <h6>Error</h6>\n        }\n    }\n\n    render(){\n        return <div>{this.renderPastDate()}</div>\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        deleteDate: (date, history)=>{dispatch(deleteDate(date, history))},\n        editDate: (outing, notes, date)=>{dispatch(editDate(outing, notes, date))}\n    }\n}\n\nexport default withRouter(connect(null,mapDispatchToProps)(PastDate))\n","import React from 'react'\nimport { Container, Row, Col, Button, Collapse } from 'react-bootstrap'\nimport {connect} from 'react-redux'\nimport PastDate from './PastDate'\nimport {fetchUrl} from '../url'\nimport LoaderWheel from '../datePresentation/LoaderWheel'\nimport SelectionCard from '../datePresentation/SelectionCard'\n\nclass Account extends React.Component{\n    state={\n        activities: [],\n        dates: [],\n        loading: true,\n        showDates: false\n    }\n    componentDidMount(){\n        fetch(`${fetchUrl()}/users/${this.props.user.id}`).then(resp=>resp.json()).then(json=>{\n            let activities = []\n            let outings =[]\n            json.included.forEach(data=>{\n                if(data.type==='activity'){\n                    activities.push(data)\n                } else {\n                    outings.push(data)\n                }\n            })\n            outings.sort(function(a,b){\n                return b.attributes.id - a.attributes.id\n            })\n            this.setState({\n                activities: activities,\n                dates: outings,\n                loading: false\n            })\n        })\n    }\n\n    showPastDate=()=>{\n        let status = this.state.showDates\n        this.setState({\n            showDates: !status\n        })\n    }\n\n    renderActivities=()=>{\n        if(this.state.activities.length >0){\n            return this.state.activities.map(activity =>{\n                return <>\n                <Col>\n                <SelectionCard activity={activity.attributes} addActivityToDate={''} random='true' foodOnly={'past-food-date'}/>\n                </Col>\n                </>\n            })\n        }\n    }\n\n    renderDates=()=>{\n        if(this.state.dates.length >0){\n            return this.state.dates.map(date=>{\n                if(date.attributes.activities.length === 1){\n                    return <>\n                            {/* <Row className=\"justify-content-md-center\"> */}\n                                <Col style={{padding: '0'}}>\n                                <PastDate date={date.attributes} type='food'/>\n                                </Col>\n                            {/* </Row> */}\n                        </>\n                }else{\n                    return <>\n                            {/* <Row className=\"justify-content-md-center\"> */}\n                            <Col style={{padding: '0'}}>\n                             \n                                <PastDate date={date.attributes} type='food-activity'/>\n                                </Col>\n                            {/* </Row> */}\n                        </> \n                }\n            })\n        }\n    }\n        render(){\n            if(this.state.loading){\n                return <LoaderWheel/>\n            }\n        return <Container fluid>\n            <h1>Welcome {this.props.user.username}!</h1>\n            {this.state.showDates ? <Button variant='primary' size='lg' onClick={this.showPastDate} style={{marginBottom: '1em'}}>Hide Dates!</Button> :<Button variant='primary' size='lg' onClick={this.showPastDate}>See Dates You Have Saved!</Button>}\n            \n            <Collapse in={this.state.showDates}>\n                <div>\n            <Row>\n            {this.renderDates()}\n            </Row>\n            </div>\n            </Collapse>\n            <hr></hr>\n            <h1>Wow! You have been to {this.state.activities.length} {this.state.activities.length === 1 ? 'place!': 'places!'}</h1>\n             When you save a date, all the places you have been will show up below. Don't worry if you go to a place more than once. We will only show the place once. Now go out and explore!\n                <br></br>\n                <br></br>\n                <Container>\n                    <Row className=\"justify-content-md-center\" lg={3} md={2} xs={1}>\n                        {this.renderActivities()}\n                    </Row>\n                </Container>\n            \n        </Container>\n        }\n}\n\n    const mapStateToProps =(state)=>{\n        return {\n            user: state.authReducer.currentUser\n        }\n    }\n\nexport default connect(mapStateToProps)(Account)","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {logout} from '../redux/actions/authActions'\nimport {connect} from 'react-redux'\nimport {withRouter} from 'react-router-dom'\nimport {Navbar,Nav} from 'react-bootstrap'\nimport '../App.css';\n\nclass Navbarr extends React.Component{\n    render(){\n        return  <Navbar collapseOnSelect bg=\"light\" variant=\"light\" expand='md' className='nav'  >\n            <Navbar.Brand><Link to='/'>Date Sidekick</Link></Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-right\">\n                \n                <Nav.Item>\n                    <Link to='/'>Home</Link>\n                </Nav.Item>\n\n\n                <Nav.Item>\n                    <Link to='/random-date/new'>Random Outing</Link>\n                </Nav.Item>\n\n                <Nav.Item>\n                    <Link to='/custom-date/new'>Create Outing</Link>\n                </Nav.Item>\n\n                {this.props.loggedIn?(\n                    <>\n                <Nav.Item>\n                    <Link to={`/user/${this.props.user.id}`}>Profile</Link>\n                </Nav.Item>\n\n                <Nav.Item>\n                    <Link to='' onClick={()=>this.props.logout(this.props.history)}>Logout</Link>\n                </Nav.Item>\n                    </>\n                ) : (\n                    <>\n                <Nav.Item>\n                    <Link to='/signup'>Signup</Link>\n                </Nav.Item>\n\n                <Nav.Item>\n                    <Link to='/login'>Login</Link>\n                </Nav.Item>                    \n                    </>\n                )}\n            </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    }\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        logout: (history)=>{dispatch(logout(history))}\n    }\n}\n\nconst mapStateToProps=(state)=>{\n    return{\n        loggedIn: state.authReducer.loggedIn,\n        user: state.authReducer.currentUser\n    }\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Navbarr))","import React from 'react'\nimport {Row, Jumbotron, Button,Col} from 'react-bootstrap'\nimport SelectionType from '../dateContainer/SelectionType'\n\nclass RandomFood extends React.Component{\n    state={\n        reloader: Math.random()\n    }\n    render(){\n        if(this.props.match.params.zipcode.length > 5){\n            this.props.history.push('/random-date/new')\n            return null\n        }else{\n        return <Jumbotron style={{padding: '1rem .5rem'}}>           \n                <Row className=\"justify-content-md-center\">  \n                        {this.props.type==='food'?<Col style={{padding: '0px', maxWidth: '600px'}}><SelectionType zipcode={this.props.match.params.zipcode} type='food'  random='true'/></Col> : <><Col style={{padding: '0px', maxWidth: '600px'}}><SelectionType zipcode={this.props.match.params.zipcode} type='food'  random='true'/></Col><Col style={{padding: '0px', maxWidth:'600px'}}><SelectionType zipcode={this.props.match.params.zipcode} type='food-activity' random={'true'} /></Col></>}                   \n                </Row>\n            <Button variant='info' onClick={()=>this.setState({reloader: Math.random()})}>Try Again</Button>{'   '}\n            <Button variant='info' onClick={()=>this.props.history.push('/random-date/new')}>Start Over</Button>\n        </Jumbotron>\n        }\n    }\n\n}\n\nexport default RandomFood","import './App.css';\nimport React from 'react'\nimport Custom from './dateContainer/Custom'\nimport Random from './dateContainer/Random'\nimport Login from './dateContainer/Login'\nimport Home from './datePresentation/Home'\nimport {BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport Signup from './dateContainer/Signup'\nimport Account from './dateContainer/Account'\nimport Navbarr from './dateContainer/Navbar'\nimport {checkLoggedIn} from './redux/actions/authActions'\nimport {connect} from 'react-redux'\nimport LoaderWheel from './datePresentation/LoaderWheel'\nimport RandomDate from './datePresentation/RandomDate'\nclass App extends React.Component {\n  \n  state={\n    loading: true\n  }\n\n  toggleLoading =()=>{\n    this.setState({\n      loading: !this.state.loading\n    })\n  }\n\n  componentDidMount(){\n    this.props.checkLoggedIn(this.toggleLoading)\n  }\n\n  render(){\n    if(this.state.loading) return  <div className='App'>\n    <LoaderWheel/>\n  </div>\n    return (\n      <div className=\"App\">\n        <Router>\n          <Navbarr/>\n          <Switch>\n            <Route exact path='/' component={Home}/>\n            <Route exact path='/random-date/new' component={Random}/>\n            <Route path='/random-food-dates/:zipcode' render={routerProps=><RandomDate {...routerProps} type='food'/>}/>\n            <Route path='/random-food-activity-dates/:zipcode' render={routerProps=><RandomDate {...routerProps} type='food-activity'/>}/>\n            <Route exact path='/custom-date/new' component={Custom}/>\n            <Route exact path='/login' component={Login}/>\n            <Route exact path='/user/:id'render={props=>{\n              if(this.props.loggedIn){\n                return <Account {...props}/>\n              }else{\n                return <Redirect to='/login'/>\n              }\n            }}  />\n            <Route exact path='/signup' component={Signup}/>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n  return {\n    checkLoggedIn: (callback)=>{dispatch(checkLoggedIn(callback))}\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return {\n    loggedIn: state.authReducer.loggedIn,\n    user: state.authReducer.currentUser\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createStore, combineReducers, applyMiddleware, compose} from 'redux'\nimport {authReducer} from './reducers/authReducer'\nimport thunk from 'redux-thunk'\n\nconst rootReducer = combineReducers({\n    authReducer: authReducer\n})\nconst composeEnhancers=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store= createStore(rootReducer,composeEnhancers(applyMiddleware(thunk)))\n\nexport default store","\n\nexport const authReducer = (state={loggedIn: false, currentUser: {}, errorMessage: '', fetching: false}, action)=>{\n    switch(action.type){\n        case 'AUTH_SUCCESSFUL':\n            return {\n                ...state,\n                 loggedIn: action.payload.loggedIn,\n                  currentUser: action.payload.currentUser,\n                  errorMessage: '',\n                  fetching: false\n                }\n        case 'AUTH_FAILED':\n            return{\n                ...state,\n                errorMessage: action.payload.errorMessage,\n                fetching: false\n            }\n        case 'STARTING_FETCH':\n            return{\n                ...state,\n                fetching: true\n            }\n            case 'LOGOUT':\n                return {\n                    ...state,\n                    loggedIn: false,\n                    currentUser: {}\n                }\n        default:\n            return {\n                ...state,\n                fetching: false\n            }\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootswatch/dist/journal/bootstrap.min.css\"\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport store from './redux'\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n  <div>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </div>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}